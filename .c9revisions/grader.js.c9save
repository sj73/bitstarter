{"ts":1373840323120,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1373840346813,"patch":[[{"diffs":[[1,"#!/usr/bin/env node\n/*\nAutomatically grade files for the presence of specified HTML tags/attributes.\nUses commander.js and cheerio. Teaches command line application development\nand basic DOM parsing.\n\nReferences:\n\n + cheerio\n   - https://github.com/MatthewMueller/cheerio\n   - http://encosia.com/cheerio-faster-windows-friendly-alternative-jsdom/\n   - http://maxogden.com/scraping-with-node.html\n\n + commander.js\n   - https://github.com/visionmedia/commander.js\n   - http://tjholowaychuk.com/post/9103188408/commander-js-nodejs-command-line-interfaces-made-easy\n\n + JSON\n   - http://en.wikipedia.org/wiki/JSON\n   - https://developer.mozilla.org/en-US/docs/JSON\n   - https://developer.mozilla.org/en-US/docs/JSON#JSON_in_Firefox_2\n*/\n\nvar fs = require('fs');\nvar program = require('commander');\nvar cheerio = require('cheerio');\nvar HTMLFILE_DEFAULT = \"index.html\";\nvar CHECKSFILE_DEFAULT = \"checks.json\";\n\nvar assertFileExists = function(infile) {\n    var instr = infile.toString();\n    if(!fs.existsSync(instr)) {\n        console.log(\"%s does not exist. Exiting.\", instr);\n        process.exit(1); // http://nodejs.org/api/process.html#process_process_exit_code\n    }\n    return instr;\n};\n\nvar cheerioHtmlFile = function(htmlfile) {\n    return cheerio.load(fs.readFileSync(htmlfile));\n};\n\nvar loadChecks = function(checksfile) {\n    return JSON.parse(fs.readFileSync(checksfile));\n};\n\nvar checkHtmlFile = function(htmlfile, checksfile) {\n    $ = cheerioHtmlFile(htmlfile);\n    var checks = loadChecks(checksfile).sort();\n    var out = {};\n    for(var ii in checks) {\n        var present = $(checks[ii]).length > 0;\n        out[checks[ii]] = present;\n    }\n    return out;\n};\n\nvar clone = function(fn) {\n    // Workaround for commander.js issue.\n    // http://stackoverflow.com/a/6772648\n    return fn.bind({});\n};\n\nif(require.main == module) {\n    program\n        .option('-c, --checks <check_file>', 'Path to checks.json', clone(assertFileExists), CHECKSFILE_DEFAULT)\n        .option('-f, --file <html_file>', 'Path to index.html', clone(assertFileExists), HTMLFILE_DEFAULT)\n        .parse(process.argv);\n    var checkJson = checkHtmlFile(program.file, program.checks);\n    var outJson = JSON.stringify(checkJson, null, 4);\n    console.log(outJson);\n} else {\n    exports.checkHtmlFile = checkHtmlFile;\n}"]],"start1":0,"start2":0,"length1":0,"length2":2305}]],"length":2305,"saved":false}
{"ts":1373843453691,"patch":[[{"diffs":[[0,"uire('fs');\n"],[1,"var rest = require('restler');\n"],[0,"var program "]],"start1":746,"start2":746,"length1":24,"length2":55},{"diffs":[[0," instr;\n};\n\n"],[1,"var assertHtmlFileExists = function(infile){\n    //var\n}\n\n"],[0,"var cheerioH"]],"start1":1210,"start2":1210,"length1":24,"length2":82},{"diffs":[[0,"MLFILE_DEFAULT)\n"],[1,"        .option('-u, --url <html_file>', 'Path to index.html', clone(assertUrlFileExists), HTMLFILE_DEFAULT)\n"],[0,"        .parse(p"]],"start1":2150,"start2":2150,"length1":32,"length2":141},{"diffs":[[0,"lFile;\n}"],[1,"\n\n"]],"start1":2495,"start2":2495,"length1":8,"length2":10}]],"length":2505,"saved":false}
{"ts":1373846253766,"patch":[[{"diffs":[[0,"    "],[-1,"//var"],[1,"rest.head(infile.toString()).on('complete', function(result){\n if (result instanceof Error) {\n    console.log('Error: ' + result.message);\n    process.exit(1);s\n  }        \n    })"],[0,"\n}\n\n"]],"start1":1267,"start2":1267,"length1":13,"length2":187}]],"length":2679,"saved":false}
{"ts":1373846263111,"patch":[[{"diffs":[[0,"exit(1);"],[-1,"s"],[0,"\n  }    "]],"start1":1422,"start2":1422,"length1":17,"length2":16}]],"length":2678,"saved":false}
{"ts":1373849209884,"patch":[[{"diffs":[[0,"s.json\";"],[1,"\nvar url = false;"],[0,"\n\nvar as"]],"start1":927,"start2":927,"length1":16,"length2":33},{"diffs":[[0,"r assert"],[-1,"Htm"],[1,"Ur"],[0,"lFileExi"]],"start1":1241,"start2":1241,"length1":19,"length2":18},{"diffs":[[0,"    "],[-1,"rest.head("],[1,"var instr = "],[0,"infi"]],"start1":1283,"start2":1283,"length1":18,"length2":20},{"diffs":[[0,"String()"],[1,";\n    rest.head(instr"],[0,").on('co"]],"start1":1308,"start2":1308,"length1":16,"length2":37},{"diffs":[[0,"esult){\n"],[1,"    "],[0," if (res"]],"start1":1364,"start2":1364,"length1":16,"length2":20},{"diffs":[[0,"rror) {\n    "],[1," "],[1,"   "],[0,"console.log("]],"start1":1400,"start2":1400,"length1":24,"length2":28},{"diffs":[[0,"ssage);\n    "],[1,"  "],[1,"  "],[0,"process.exit"]],"start1":1449,"start2":1449,"length1":24,"length2":28},{"diffs":[[0,";\n  "],[-1,"}        "],[1,"   }\n     url = true;\n     return instr;"],[0,"\n    })"],[1,";"],[0,"\n}"],[1,";"],[0,"\n\nva"]],"start1":1480,"start2":1480,"length1":26,"length2":59},{"diffs":[[0,"    "],[-1,"return cheerio.load(fs.readFileSync(htmlfile));"],[1,"var file = null;\n    if(url === false){\n        file = fs.readFileSync(htmlfile);\n        return cheerio.load(file);\n    } else {\n        rest.get(htmlfile).on('complete', function(data){\n            file = data;\n            return cheerio.load(file);\n        });\n    }"],[0,"\n};\n"]],"start1":1580,"start2":1580,"length1":55,"length2":277},{"diffs":[[0,".argv);\n"],[1,"    var inputFile = null;\n    if(url){\n        inputFile = program.url;\n    } else {\n        inputFile = program.file;\n    }\n"],[0,"    var "]],"start1":2776,"start2":2776,"length1":16,"length2":141},{"diffs":[[0,"tmlFile("],[-1,"program.f"],[1,"inputF"],[0,"ile, pro"]],"start1":2935,"start2":2935,"length1":25,"length2":22}]],"length":3106,"saved":false}
